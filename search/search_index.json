{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"COVID-19 Test Registierung - Willkommen Herzlich willkommen auf dem COVID-19 Test Registierungprojekten Dokumentationsseite! Unser Hauptziel Wir m\u00f6chten Gesundheits\u00e4mter und Kranken bei der der Erfassung von Coronaf\u00e4llen helfen","title":"Overview"},{"location":"#covid-19-test-registierung-willkommen","text":"Herzlich willkommen auf dem COVID-19 Test Registierungprojekten Dokumentationsseite!","title":"COVID-19 Test Registierung - Willkommen"},{"location":"#unser-hauptziel","text":"Wir m\u00f6chten Gesundheits\u00e4mter und Kranken bei der der Erfassung von Coronaf\u00e4llen helfen","title":"Unser Hauptziel"},{"location":"backend/","text":"Backend (API) Implamentation Please use the links to the implementation of API in repository: https://github.com/schmiddim/0583-App-zur-Registrierung-Infizierter/blob/master/app/views/person_create.py https://github.com/schmiddim/0583-App-zur-Registrierung-Infizierter/blob/master/app/views/person_create.py Used libraries: JSON OpenAPI HowToUse Simply use the link below to test creating the new person with an infection using the API: [Test COVID-19 API on getpostman.com](https://documenter.getpostman.com/view/10810457/SzS8s4vh?version=latest#198c7c6d-a2d9-447c-ad92-a962ae7b94f2](https://documenter.getpostman.com/view/10810457/SzS8s4vh?version=latest#198c7c6d-a2d9-447c-ad92-a962ae7b94f2) Use many languages to interact with the AP: - cURL -cURL - C# - RestSharp - Go - Native - HTTP - HTTP - Java - JavaScript - C - NodeJs - ObjectiveC - OCaml - PHP - PowerShell - Python - Ruby - Shell - Switf","title":"Backend (API)"},{"location":"backend/#backend-api","text":"","title":"Backend (API)"},{"location":"backend/#implamentation","text":"Please use the links to the implementation of API in repository: https://github.com/schmiddim/0583-App-zur-Registrierung-Infizierter/blob/master/app/views/person_create.py https://github.com/schmiddim/0583-App-zur-Registrierung-Infizierter/blob/master/app/views/person_create.py","title":"Implamentation"},{"location":"backend/#used-libraries","text":"JSON OpenAPI","title":"Used libraries:"},{"location":"backend/#howtouse","text":"Simply use the link below to test creating the new person with an infection using the API: [Test COVID-19 API on getpostman.com](https://documenter.getpostman.com/view/10810457/SzS8s4vh?version=latest#198c7c6d-a2d9-447c-ad92-a962ae7b94f2](https://documenter.getpostman.com/view/10810457/SzS8s4vh?version=latest#198c7c6d-a2d9-447c-ad92-a962ae7b94f2) Use many languages to interact with the AP: - cURL -cURL - C# - RestSharp - Go - Native - HTTP - HTTP - Java - JavaScript - C - NodeJs - ObjectiveC - OCaml - PHP - PowerShell - Python - Ruby - Shell - Switf","title":"HowToUse"},{"location":"contact/","text":"","title":"Contact"},{"location":"frontend/","text":"Frontend (Web App) Main repository: https://github.com/schmiddim/0583-App-zur-Registrierung-Infizierter Web Application https://corona.vapesetups.com The frontend app is build on Python pyramid. Other libraries used: Jinja2 i18n for Site Translation : Site will display in a proper language Currently supported languages are: - German - English (Default) - Polish - Norwegian","title":"Frontend (Client)"},{"location":"frontend/#frontend-web-app","text":"","title":"Frontend (Web App)"},{"location":"frontend/#main-repository","text":"https://github.com/schmiddim/0583-App-zur-Registrierung-Infizierter","title":"Main repository:"},{"location":"frontend/#web-application","text":"https://corona.vapesetups.com The frontend app is build on Python pyramid. Other libraries used: Jinja2 i18n for Site Translation : Site will display in a proper language Currently supported languages are: - German - English (Default) - Polish - Norwegian","title":"Web Application"},{"location":"get_started/","text":"Get Started # Create a new virtual environment... python3 -m venv env # ...where we upgrade packaging tools... env/bin/pip install --upgrade pip setuptools # ...and into which we install our project. env/bin/pip install -e . env/bin/pserve development.ini --reload Please look at the cookiecutter docu","title":"Get Started"},{"location":"get_started/#get-started","text":"# Create a new virtual environment... python3 -m venv env # ...where we upgrade packaging tools... env/bin/pip install --upgrade pip setuptools # ...and into which we install our project. env/bin/pip install -e . env/bin/pserve development.ini --reload Please look at the cookiecutter docu","title":"Get Started"},{"location":"hosting/","text":"Hosting The web app is hosted here: https://corona.vapesetups.com/","title":"Hosting"},{"location":"hosting/#hosting","text":"The web app is hosted here: https://corona.vapesetups.com/","title":"Hosting"},{"location":"links/","text":"Useful Links Slack Channel for the Project Our Trello Board Wir VS Virus Hackathon","title":"Links"},{"location":"links/#useful-links","text":"Slack Channel for the Project Our Trello Board Wir VS Virus Hackathon","title":"Useful Links"},{"location":"project_management/","text":"Project Management DevPost https://devpost.com/software/0008_corona_tracking_registrierung_infizierter Github https://github.com/schmiddim/0583-App-zur-Registrierung-Infizierter Slack 0583_corona_tracki ng_app.slack.com Team Jakob Rohrhirsch (Creator) Bernhard Hecker Michael Schmitt Pawel Sikora","title":"Project Management"},{"location":"project_management/#project-management","text":"","title":"Project Management"},{"location":"project_management/#devpost","text":"https://devpost.com/software/0008_corona_tracking_registrierung_infizierter","title":"DevPost"},{"location":"project_management/#github","text":"https://github.com/schmiddim/0583-App-zur-Registrierung-Infizierter","title":"Github"},{"location":"project_management/#slack","text":"0583_corona_tracki ng_app.slack.com","title":"Slack"},{"location":"project_management/#team","text":"Jakob Rohrhirsch (Creator) Bernhard Hecker Michael Schmitt Pawel Sikora","title":"Team"},{"location":"resources/","text":"","title":"Resources"}]}